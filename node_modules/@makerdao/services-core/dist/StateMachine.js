"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.IllegalStateError = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));

var IllegalStateError =
/*#__PURE__*/
function (_Error) {
  (0, _inherits2["default"])(IllegalStateError, _Error);

  function IllegalStateError() {
    (0, _classCallCheck2["default"])(this, IllegalStateError);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(IllegalStateError).apply(this, arguments));
  }

  return IllegalStateError;
}((0, _wrapNativeSuper2["default"])(Error));

exports.IllegalStateError = IllegalStateError;

var StateMachine =
/*#__PURE__*/
function () {
  function StateMachine(initialState, transitions) {
    (0, _classCallCheck2["default"])(this, StateMachine);

    if ((0, _typeof2["default"])(transitions) !== 'object') {
      throw new Error('StateMachine transitions parameter must be an object.');
    }

    if (Object.keys(transitions).filter(function (k) {
      return transitions.hasOwnProperty(k) && !(transitions[k] instanceof Array);
    }).length > 0) {
      throw new Error('Illegal StateMachine transition found: not an array.');
    }

    if (Object.keys(transitions).filter(function (k) {
      return transitions.hasOwnProperty(k) && transitions[k].filter(function (s) {
        return !transitions[s];
      }).length > 0;
    }).length > 0) {
      throw new Error('Illegal StateMachine transition found: target state not in transition map.');
    }

    if (!(transitions[initialState] instanceof Array)) {
      throw new Error('Initial state ' + initialState + ' is not set in the transitions map.');
    }

    this._state = initialState;
    this._nextStates = transitions;
    this._stateChangedHandlers = [];
  }

  (0, _createClass2["default"])(StateMachine, [{
    key: "onStateChanged",
    value: function onStateChanged(callback) {
      this._stateChangedHandlers.push(callback);
    }
  }, {
    key: "state",
    value: function state() {
      return this._state;
    }
  }, {
    key: "inState",
    value: function inState(state) {
      if (!(state instanceof Array)) {
        state = [state];
      }

      return state.indexOf(this._state) >= 0;
    }
  }, {
    key: "assertState",
    value: function assertState(state) {
      var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

      if (!this.inState(state)) {
        throw new IllegalStateError('Illegal operation for state ' + this._state + (operation.length > 0 ? ': ' + operation : ''));
      }
    }
  }, {
    key: "transitionTo",
    value: function transitionTo(newState) {
      if (this._nextStates[newState] === undefined) {
        throw new IllegalStateError('Cannot set illegal state: ' + newState);
      }

      if (newState !== this._state) {
        if (this._nextStates[this._state].indexOf(newState) < 0) {
          throw new IllegalStateError('Illegal state transition: ' + this._state + ' to ' + newState);
        }

        var oldState = this._state;
        this._state = newState;

        this._stateChangedHandlers.forEach(function (cb) {
          return cb(oldState, newState);
        });
      }

      return this;
    }
  }]);
  return StateMachine;
}();

exports["default"] = StateMachine;