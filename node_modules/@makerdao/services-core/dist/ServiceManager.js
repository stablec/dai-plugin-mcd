"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DependencyNotResolvedError = exports.UnknownDependencyError = exports.InvalidServiceError = exports["default"] = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));

var _ServiceManagerBase2 = _interopRequireDefault(require("./ServiceManagerBase"));

/**
 *
 */
var InvalidServiceError =
/*#__PURE__*/
function (_Error) {
  (0, _inherits2["default"])(InvalidServiceError, _Error);

  function InvalidServiceError(message) {
    (0, _classCallCheck2["default"])(this, InvalidServiceError);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(InvalidServiceError).call(this, message));
  }

  return InvalidServiceError;
}((0, _wrapNativeSuper2["default"])(Error));
/**
 *
 */


exports.InvalidServiceError = InvalidServiceError;

var UnknownDependencyError =
/*#__PURE__*/
function (_Error2) {
  (0, _inherits2["default"])(UnknownDependencyError, _Error2);

  function UnknownDependencyError(service, dependency) {
    (0, _classCallCheck2["default"])(this, UnknownDependencyError);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(UnknownDependencyError).call(this, 'Injected service ' + dependency + ' is not a dependency of ' + service));
  }

  return UnknownDependencyError;
}((0, _wrapNativeSuper2["default"])(Error));
/**
 *
 */


exports.UnknownDependencyError = UnknownDependencyError;

var DependencyNotResolvedError =
/*#__PURE__*/
function (_Error3) {
  (0, _inherits2["default"])(DependencyNotResolvedError, _Error3);

  function DependencyNotResolvedError(service, dependency) {
    (0, _classCallCheck2["default"])(this, DependencyNotResolvedError);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(DependencyNotResolvedError).call(this, 'Dependency ' + dependency + ' of service ' + service + ' is unavailable.'));
  }

  return DependencyNotResolvedError;
}((0, _wrapNativeSuper2["default"])(Error));
/**
 * @param callback
 * @returns {Promise}
 * @private
 */


exports.DependencyNotResolvedError = DependencyNotResolvedError;

function _waitForDependencies(callback) {
  return Promise.all(this.dependencies().map(function (dependency) {
    return callback(dependency);
  }));
}
/**
 *
 */


var ServiceManager =
/*#__PURE__*/
function (_ServiceManagerBase) {
  (0, _inherits2["default"])(ServiceManager, _ServiceManagerBase);
  (0, _createClass2["default"])(ServiceManager, null, [{
    key: "isValidService",

    /**
     * @param {*} service
     * @returns {boolean}
     */
    value: function isValidService(service) {
      return service !== null && (0, _typeof2["default"])(service) === 'object' && typeof service.manager === 'function';
    }
    /**
     * @param {string} name
     * @param {string[]} dependencies
     * @param {function|null} init
     * @param {function|null} connect
     * @param {function|null} auth
     */

  }]);

  function ServiceManager(name) {
    var _this;

    var dependencies = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var init = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    var connect = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    var auth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
    (0, _classCallCheck2["default"])(this, ServiceManager);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ServiceManager).call(this, init, connect, auth));

    if (!name) {
      throw new Error('Service name must not be empty.');
    }

    _this._name = name;
    _this._dependencies = dependencies;
    _this._injections = {};
    dependencies.forEach(function (d) {
      return _this._injections[d] = null;
    });
    return _this;
  }

  (0, _createClass2["default"])(ServiceManager, [{
    key: "name",
    value: function name() {
      return this._name;
    }
  }, {
    key: "dependencies",
    value: function dependencies() {
      return this._dependencies;
    }
  }, {
    key: "inject",
    value: function inject(dependency, service) {
      if (typeof this._injections[dependency] === 'undefined') {
        throw new UnknownDependencyError(this.name(), dependency);
      }

      if (!ServiceManager.isValidService(service)) {
        throw new InvalidServiceError('Cannot inject invalid service in ' + this.name());
      }

      this._injections[dependency] = service;
      return this;
    }
  }, {
    key: "dependency",
    value: function dependency(name) {
      if (!this._injections[name]) {
        throw new DependencyNotResolvedError(this.name(), name);
      }

      return this._injections[name];
    }
  }, {
    key: "initialize",
    value: function initialize() {
      var _this2 = this;

      return this.initializeDependencies().then(function () {
        return (0, _get2["default"])((0, _getPrototypeOf2["default"])(ServiceManager.prototype), "initialize", _this2).call(_this2, _this2._settings);
      });
    }
  }, {
    key: "connect",
    value: function connect() {
      var _this3 = this;

      return this.connectDependencies().then(function () {
        return (0, _get2["default"])((0, _getPrototypeOf2["default"])(ServiceManager.prototype), "connect", _this3).call(_this3);
      });
    }
  }, {
    key: "authenticate",
    value: function authenticate() {
      var _this4 = this;

      return this.authenticateDependencies().then(function () {
        return (0, _get2["default"])((0, _getPrototypeOf2["default"])(ServiceManager.prototype), "authenticate", _this4).call(_this4);
      });
    }
  }, {
    key: "initializeDependencies",
    value: function initializeDependencies() {
      var _this5 = this;

      return _waitForDependencies.call(this, function (d) {
        return _this5.dependency(d).manager().initialize();
      });
    }
  }, {
    key: "connectDependencies",
    value: function connectDependencies() {
      var _this6 = this;

      return _waitForDependencies.call(this, function (d) {
        return _this6.dependency(d).manager().connect();
      });
    }
  }, {
    key: "authenticateDependencies",
    value: function authenticateDependencies() {
      var _this7 = this;

      return _waitForDependencies.call(this, function (d) {
        return _this7.dependency(d).manager().authenticate();
      });
    }
  }, {
    key: "createService",
    value: function createService() {
      var _this8 = this;

      return {
        manager: function manager() {
          return _this8;
        }
      };
    }
  }]);
  return ServiceManager;
}(_ServiceManagerBase2["default"]);

exports["default"] = ServiceManager;